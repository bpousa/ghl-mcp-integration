{"content": "const { createServer } = require('@modelcontextprotocol/core');\nconst { GHLService } = require('./services/ghl.service');\nconst { DatabaseService } = require('./services/database.service');\n\nconst server = createServer({\n  name: 'ghl-mcp-server',\n  version: '1.0.0'\n});\n\nserver.addResource({\n  name: 'ghl-api-key',\n  methods: {\n    generateKey: async (subAccountId) => {\n      const ghlService = new GHLService();\n      const dbService = new DatabaseService();\n\n      try {\n        await ghlService.login();\n        const apiKey = await ghlService.generateApiKey(subAccountId);\n        await dbService.storeApiKey(subAccountId, apiKey);\n        return { success: true, apiKey };\n      } catch (error) {\n        console.error('Error in generateKey:', error);\n        throw new Error('Failed to generate API key');\n      }\n    }\n  }\n});\n\nserver.start().then(() => {\n  console.log('MCP server started successfully');\n});", "encoding": "utf-8"}